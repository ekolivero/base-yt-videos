/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/locations/suggest/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Suggest */
        get: operations["suggest_locations_suggest__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/locations/location_id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Location By Id */
        get: operations["location_by_id_locations_location_id_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/houses/location_id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Houses By Id */
        get: operations["houses_by_id_houses_location_id_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/houses/page_name": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Houses By Page */
        get: operations["houses_by_page_houses_page_name_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/houses/aggregation/location_id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Houses Aggregation By Id */
        get: operations["houses_aggregation_by_id_houses_aggregation_location_id_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/houses/aggregation/page_name": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Houses Aggregation By Page */
        get: operations["houses_aggregation_by_page_houses_aggregation_page_name_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AggregationBucket */
        AggregationBucket: {
            /** Key */
            key: string;
            /** Count */
            count: number;
        };
        /** AggregationResponse */
        AggregationResponse: {
            /** Aggregation */
            aggregation: {
                [key: string]: components["schemas"]["AggregationBucket"][];
            };
        };
        /** Coordinates */
        Coordinates: {
            /** Latitude */
            latitude: number;
            /** Longitude */
            longitude: number;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** House */
        House: {
            /** Title */
            title: string;
            /**
             * Description
             * @default
             */
            description: string;
            location: components["schemas"]["LocationInfo"];
            /** Link */
            link: string;
            /** Image */
            image: string;
            /** Category */
            category: string;
            price: components["schemas"]["Price"];
            /** Contract */
            contract: string;
            /** Condition */
            condition: string;
            surface: components["schemas"]["Surface"];
            /** Rooms */
            rooms: string;
            /** Bedrooms */
            bedrooms: string;
            /** Bathrooms */
            bathrooms: string;
            /** Furniture */
            furniture?: string | null;
            /** Balcony */
            balcony?: string | null;
            /** Terrace */
            terrace?: string | null;
            /** Elevator */
            elevator?: string | null;
        };
        /** HousesResponse */
        HousesResponse: {
            /** Houses */
            houses: components["schemas"]["House"][];
            /** Page Name */
            page_name: string;
            /** Page Number */
            page_number: number;
            /** Per Page */
            per_page: number;
            /** Total Results */
            total_results: number;
            /** Total Pages */
            total_pages: number;
        };
        /** Location */
        Location: {
            /** Id */
            id: string;
            /** Label */
            label: string;
            /** Level */
            level: number;
            /** Page */
            page: string;
            /** Parents */
            parents?: string[];
        };
        /** LocationHierarchy */
        LocationHierarchy: {
            /** Id */
            id: string;
            /** Label */
            label: string;
            /** Level */
            level: string;
        };
        /** LocationInfo */
        LocationInfo: {
            coordinates: components["schemas"]["Coordinates"];
            /** Hierarchy */
            hierarchy: {
                [key: string]: components["schemas"]["LocationHierarchy"];
            };
        };
        /** Parent */
        Parent: {
            /** Id */
            id: string;
            /** Label */
            label: string;
            /** Level */
            level: number;
        };
        /** Price */
        Price: {
            /** Value */
            value: number;
            /** Text */
            text: string;
            /** Enum */
            enum: string;
        };
        /** SuggestResponse */
        SuggestResponse: {
            /** Suggestions */
            suggestions: components["schemas"]["Suggestion"][];
        };
        /** Suggestion */
        Suggestion: {
            /** Id */
            id: string;
            /** Label */
            label: string;
            /** Level */
            level: number;
            /** Page */
            page: string;
            /** Parents */
            parents?: components["schemas"]["Parent"][] | null;
        };
        /** Surface */
        Surface: {
            /** Value */
            value: number;
            /** Text */
            text: string;
            /** Enum */
            enum: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    suggest_locations_suggest__get: {
        parameters: {
            query: {
                query: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuggestResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    location_by_id_locations_location_id_get: {
        parameters: {
            query: {
                /** @description List of location IDs to filter by */
                ids: string[];
                /** @description Whether to include the geometry field in the results */
                include_geometry?: boolean | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Location"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    houses_by_id_houses_location_id_get: {
        parameters: {
            query: {
                location_id: string;
                location_level: number;
                categories?: string[] | null;
                contract?: string | null;
                condition?: string | null;
                price_min?: number | null;
                price_max?: number | null;
                surface_min?: number | null;
                surface_max?: number | null;
                rooms?: string[] | null;
                bathrooms?: string[] | null;
                furniture?: string | null;
                terrace?: string | null;
                elevator?: string | null;
                balcony?: string | null;
                page_number?: number;
                per_page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HousesResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    houses_by_page_houses_page_name_get: {
        parameters: {
            query: {
                page_name: string;
                categories?: string[] | null;
                contract?: string | null;
                condition?: string | null;
                price_min?: number | null;
                price_max?: number | null;
                surface_min?: number | null;
                surface_max?: number | null;
                rooms?: string[] | null;
                bathrooms?: string[] | null;
                furniture?: string | null;
                terrace?: string | null;
                elevator?: string | null;
                balcony?: string | null;
                page_number?: number;
                per_page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HousesResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    houses_aggregation_by_id_houses_aggregation_location_id_get: {
        parameters: {
            query: {
                location_id: string;
                location_level: number;
                categories?: string[] | null;
                contract?: string | null;
                condition?: string | null;
                price_min?: number | null;
                price_max?: number | null;
                surface_min?: number | null;
                surface_max?: number | null;
                rooms?: string[] | null;
                bathrooms?: string[] | null;
                furniture?: string | null;
                terrace?: string | null;
                elevator?: string | null;
                balcony?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AggregationResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    houses_aggregation_by_page_houses_aggregation_page_name_get: {
        parameters: {
            query: {
                page_name: string;
                categories?: string[] | null;
                contract?: string | null;
                condition?: string | null;
                price_min?: number | null;
                price_max?: number | null;
                surface_min?: number | null;
                surface_max?: number | null;
                rooms?: string[] | null;
                bathrooms?: string[] | null;
                furniture?: string | null;
                terrace?: string | null;
                elevator?: string | null;
                balcony?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AggregationResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
